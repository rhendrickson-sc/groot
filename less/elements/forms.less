//
// Forms
// --------------------------------------------------
label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

form {

    button{ margin: 25px 0 0 0; }
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control`
// to any input type not listed here
input[type=text],
input[type=password],
input[type="email"],
input[type="tel"],
input[type="url"],
input[type="number"],
.selectbox-container,
textarea,
.form-control {
  -webkit-appearance: none; //to make sure IOS default styling is removed
  -webkit-border-radius: 0; //to make sure IOS default round corners is removed - this can be removed if there are supposed to be rounded corners
  border-radius: 0;

  display: block;
  box-sizing: border-box;
  width: 100%;
  height: @input-height; // Make inputs at least the height of their button counterpart (base line-height + padding + border)

  padding: @input-padding;
  margin-bottom: @input-bottom-margin;

  font-size: @input-font-size;
  line-height: @input-font-size+1;

  color: @input-color;
  vertical-align: middle;

  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214

  border: 1px solid @input-border;

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  // Placeholder text gets special styles because when browsers invalidate entire
  // lines if it doesn't understand a selector/
  .placeholder();

  // Disabled and read-only inputs
  &[disabled],
  &[readonly]{
    cursor: not-allowed;
    background-color: @input-bg-disabled;
  }

}

.selectbox-container{
	position: relative;
	padding: 0;

	select{
		position: relative;
		z-index: 1;
		background: transparent;
		margin: 0;
		width: 100%;
		height: @input-height;
		padding: @input-padding;
		border: 0;
		-webkit-appearance: none;
		-moz-appearance: none;

		.placeholder();
	}

	//using before to keep it behind the actual select element being clicked
	&:before{
		content: "";
		display: block;
		position: absolute;
		top: 50%;
		right: 10px;
		margin-top: -5px;
		border-top: 10px solid @gray;
		border-left: 10px solid transparent;
		border-right: 10px solid transparent;
	}
}
select::-ms-expand{
    /* for IE 10+ */
    display:none;
}

textarea{
	height: 150px;
}


// Position radios and checkboxes better [default styles]
input[type="radio"], input[type="checkbox"] {
	margin: 4px 5px 0 1px;
	line-height: normal;
}
input[type="radio"] + label, input[type="checkbox"] + label{
	display: inline-block;
	margin: 0 15px 0 5px;
	font-weight: normal;
	font-size: @input-font-size;
	color: @input-color;
}
// Apply same disabled cursor tweak as for inputs
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"]{
  &[disabled]{
    cursor: not-allowed;

    /* if customized styles
    & + label:before{
      cursor: not-allowed;
    }
    */
  }

}

// CUSTSOMIZE STYLED - Checkboxes and radios
/*
input[type=checkbox],input[type=radio]{ position: absolute; left: -9999em; opacity: 0; }

input[type=checkbox] + label,
input[type=radio] + label{
	position: relative;
	display: inline-block !important;
	margin: 0 5px @input-bottom-margin 0;
	padding: 0 0 0 20px !important;
	font-weight: normal;

	&:before{
    	content: "";
    	display: block;
    	width: 15px;
    	height: 15px;
    	position: absolute;
    	top: 2px;
    	left: 0;
    	background: #fff;
    }

    &.checked:before{ background: #000; }
}

input[type=checkbox]:checked + label,
input[type=radio]:checked + label{
	&:before{ background: #000; }
}

*/
